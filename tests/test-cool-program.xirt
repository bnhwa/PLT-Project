/* https://www.geeksforgeeks.org/maximum-size-sub-matrix-with-all-1s-in-a-binary-matrix/ */

/* we only work with 6 by 5 matrices */
num min(num a, num b) {
    if (a <= b) {
        return a;
    } else {
        return b;
    }
}

xirtam copy_first_row(xirtam source, xirtam dest, num col) {

    num val;
    num i;

    for (i = 0 ; i < col ; i = i + 1) {
        val = matget(source, 0, i);
        matset(dest, 0, i, val);
    }

    return dest;
    
}



xirtam copy_first_col(xirtam source, xirtam dest, num row) {

    num val;
    num i;

    for (i = 0 ; i < row ; i = i + 1) {
        val = matget(source, i, 0);
        matset(dest, i, 0, val);
    }

    return dest;
    
}

xirtam find_intermediate_indicator_matrix(xirtam s, xirtam d, num row, num col) {
    num cur_r;
    num cur_c;
    num desired_min;
    num desired_min_plus_1;

    d = copy_first_row(s, d, col);
    d = copy_first_col(s, d, row);

    for (cur_r = 1; cur_r < row; cur_r = cur_r + 1) {
        for (cur_c = 1; cur_c < col; cur_c = cur_c + 1) {
            
            if (matget(s, cur_r, cur_c) == 1) {
                desired_min = min(matget(d, cur_r-1, cur_c), matget(d, cur_r, cur_c-1));
                desired_min = min(desired_min, matget(d, cur_r-1, cur_c-1));
                desired_min_plus_1 = desired_min + 1;
                matset(d, cur_r, cur_c, desired_min_plus_1);
            } else {
                matset(d, cur_r, cur_c, 0);
            }
        }
    }
    return d;
}

num main() {
    xirtam s;
    xirtam d;

    s = [[0, 1, 1, 0, 1], [1, 1, 0, 1, 0], [0, 1, 1, 1, 0], [1, 1, 1, 1, 0], [1, 1, 1, 1, 1], [0, 0, 0, 0, 0]];
    d = [[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]];
    
    d = find_intermediate_indicator_matrix(s, d, 6, 5);
    

    printm(d);

    s = [[0, 1, 1, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1]];
    d = [[0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0]];

    d = find_intermediate_indicator_matrix(s, d, 6, 9);

    printm(d);
    
}